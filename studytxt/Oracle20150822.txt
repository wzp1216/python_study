关系数据库：

一个描述两个集合的元素如何相互联系或如何一一对应的数学概念，对于数据库来说，关系只是一个带有一些特殊属性的表。
         数据的基础项是关系  在这些表上的操作只产生关系    一个关系表必须符合某些特定条件，才能成为关系模型的一部分   储存在单元中的数据必须是原子的
             

	每个单元只能存储一条数据，叫信息原则（Information Principle）。如果存储多条则违反信息原则。
	 储存在列下的数据必须具有相同的数据类型。  每一行是唯一的（没有完全相同的行）。  列没有顺序。 行没有顺序    列有一个唯一性的名称。

	关系模型的另一个是完整性原则。
		它包括实体完整性原则（Entity integrity rule）和引用完整性原则（ Referential integrity rule ），
		如： 主键( Primary key )是能唯一标识行的一列或一组列的集合。  
		 由多个列构成的主键称为连接键（Concatenated key）、组合键（Compound key ）,或称作为复合键(Composity key )。
		  另外就是外部键（Foreign key ）是一个表中的一列或一组列，它们在其它表中作为主键而存在。
		一个表中的外部键被认为是对另外一个表中主键的引用。
		实体完整性原则简洁地表明主键不能全部或部分地空缺或为空，引用完整性原则简洁地表明一个外键必须为空或者它所引用的主键当前存在值相一致。 



 Codd十二法则 
		  1) 信息法则。
		  2) 授权存储法则，每一个数据项都通过“表名+行主键+列名”的组合形成访问。 
			3) 必须以一致的方法使用空值。 
			 4) 一个活跃的、在线数据字典应作为关系型表被储存
		 5) 必须提供数据存取语言进行存取访问。
		 6) 所有能被更新的视图应当是可被更新的。 
			7) 必须有集合级的插入、更新和删除。
			 8) 物理数据的独立性。即应用不依赖物理结构。 
			 9) 逻辑数据的独立性。如果一个表被分成两个部分，则应用视图连接在一起，以便不会对应用产生影响。 
		 10) 完整性的独立性。完整性规则应该储存在数据字典中。 
				11) 分布独立性。一个数据库即使被分布，也应该能工作。 
			 12) 非破坏性原则。如果允许低级存取，一定不能绕过安全性和完整性原则。 


前期准备：
	安装oracle学习版；system wzp781216;
	注意oracle用户，启用示例库hR用户；密码为hr;


数据存储问题：内存   fILE    dBMS---db;

RDBMS---关系型数据库管理系统；
rDB----关系型数据库库，基于二维表的数据库；
	表：行    列    字段名   字段值    表头；


SQL (struct query) 分类
	1。select查询语句
		select
	2.DDL   数据定义语句；
		create    drop    alter
	3 DML  数据操作语句；
 			insert  delete  update
	4. TCL 事务控制语句；
			commit;  rollback;   savepoint

操作oracle:
	到oRacle工作目录；sqlplus  hr/hr;


查看表结构：
	desc  表名；


FROM子句：
	从表中查询一个字段对应的内容；select 字段名 from  表名；
		查多个字段内容：	select 字段名1 , 字段名，字段名3   from  表名；
	查所有字段  select * from   tablename;
	字段可以加运算      select salary*12 from  tablename;
	可以起别名			select salary*12  yearsal from tablename;


	sql中字符串，用单引号表达；
	字符串拼接用   ||
	select first_name||'_'||last_name from tablename;
	注意如何碰到NULL，与任何值运算结果全为nULL；
	可以以用nvl(a,b)处理，如果a为nULL，则返回b;
	注意nva两个参数，类型必须一致；库中nULL需尽早处理；

	
	数据的排重；
	select distinct department_ID from table   重复的部门iD只显示一次；


where子句：
	where 用于限制表中数据的返回，不符合条件的数据被过滤掉；
	from  表名  where  条件；
     select employee_id, salary,department_id  from employees where salary>10000;表示显示salary大于1万的员工号，薪水，部门号；
	字符查找条件  where first_name='Lex'
	sql语句不分大小写，但字符串值区别大小写；字符串加''
	比较运算=   !=  <    <=       >      >=;
	介于 两者之间 [a,b]   用between  a   and  b;
	表达几个值之一用   where ID  in (id1,id2,id3)
	找出现空的用 where  ID   is   NULL;


	模糊查询运算符 like;
	通配符：   %   0-n个任意字符；
				_   一个任意字符；


列出现所有的表的信息：
	select table_name from user_tables;
	找出所有的以S__开头的表     select  table_name   from  user_tables  where table_name like 'S\_\_%' escape '\'; 



逻辑条件连接符
	and   or   
 	and为与；or为或；
	not为对立面问题；
	between   a  and b   ------not   between a and b ;;
	in                   ------not   in (注意NULL值不列出)
	like                 ------not   like
	is  null             -----  is  not  null
	and是与运输，or是或运算。在优先级上，and的优先级高于or。a >1 or b>1 and C>1 相当于（a >1） or（ b>1 and C>1 ）；


排序
	from  表名   where  条件   order by 标准
	默认顺序，是按升序(asc)、 自然顺序 、  字典顺序；
	降序  desc
    按ID降序：select ID  from tablename where 1=1 order by ID desc;
	多字段时，先第一个排，第一个相同，用第二个排；
	nULL在排序中按最大处理；



--------------------------------------------------------------------------
函数
	单行函数：对sql语句的每一行数据进行处理，并且针对每一行都返回处理结果；sql语句影响多少行，就返回多少个处理结果。
	组函数：对sql语句影响的所有数据做统一处理，返回一个结果；

	字符串处理单行函数：
		特殊单行单列表 dual;虚拟表；用于测试单行函数、做计算器，返回用户 时间等；
		upper() 把字符串转换为大写； select upper('ss') from dual;
		lower()		变小写；
		initcap()	首字母变大写；
		length() 	求字符串长度；
		concat()	连接两个字符串；
			 substr(par1,par2,par3)       截取字符串 par1要处理的字符串 par2 从什么位置开始截取 从1开始编号1代表第一个字符 也可以是 负数-1代表最后一个字符   par3 截取的数据长度
		replace(part1,patr2,part3) part1 要处理的字符串  part2是part1中要处理的一部分  part3是要替换成的内容；
		


	字数处理函数：
		round(a,b) 四舍五入，a是数据，b是精度，对小数点后第几位处理，默认为0
	trunc(a,b)截取函数，a是数据，b是b是精度，对小数点后第几位处理，默认为0
	

	格式转换函数
		to_char() 转换为字符串；
		to_number() 转换为数字；

	格式显示函数：
		数字处理
		to_char(part1,part2) part1是要处理的数字，part2是显示格式，以fm 开头
		9  在小数点前代表0-9任意数字   小数点后代表1-9任意数字；
		0  在小数点前代表强制显示0    小数点后代表0-9任意数字；
		如099,999.99   不显示后面的00    ￥099，999.00  会显示后面的0

	设置上


-------------------------------------------------------------------------
多表查询
	两张表中有同名字段时，加表名.   用于区分 ；
	语法：select  字段1，字段2  from  表1，表2   where  表的连接条件；
		select first_name ,department_name , ee.department_id  from employees ee, departments dd where ee.department_id=dd.department_id;
	tablename   aa  可以在语句中给表起别名为aa;
	

	使用等号连接表，叫等值连接；
	如不使用等号连接表，呢非等值连接；

	


	




注：达内day02 ；


						

